{"version":3,"file":"common.372f3d3efe407a49.js","mappings":"qQAIM,QAAwBA,mBAETC,GACjB,OAAOA,EAAMC,qUADfC,GADCC,QAAS,CAACC,MACXC,+HCJI,WAAmBC,GACvBC,OAAOC,KAAKF,EAAKA,KAAKG,UAAUC,QAASC,IACvC,IAAIC,EAAUN,EAAKA,KAAKG,SAASE,GACJ,iBAAlBC,EAAQC,OACjBD,EAAQE,SAASF,EAAQC,MAAME,UAK/B,WAAqBC,GACzBT,OAAOC,KAAKQ,GAAQN,QAASC,IAC3B,IAAIM,EAAOD,EAAOL,GACE,iBAATM,EACTD,EAAOL,GAAeM,EAAKF,OACF,iBAATE,GAA8B,OAATA,GACrCC,EAAWD","names":["static","state","settings","__decorate","Selector","SettingsState","f","form","Object","keys","controls","forEach","controlName","control","value","setValue","trim","object","prop","trimObject"],"sourceRoot":"webpack:///","sources":["./src/app/shared/store/settings-store/settings.selectors.ts","./src/app/shared/util/form-trimmer.ts"],"sourcesContent":["import { Selector } from '@ngxs/store';\r\nimport { SettingsState, SettingsStateModel } from './settings.state';\r\nimport { Settings } from '../../../settings/models/settings';\r\n\r\nexport class SettingsSelectors {\r\n  @Selector([SettingsState])\r\n  static getSettings(state: SettingsStateModel): Settings {\r\n    return state.settings;\r\n  }\r\n}\r\n","import { NgForm } from '@angular/forms';\r\n\r\nexport function trimForm(form: NgForm) {\r\n  Object.keys(form.form.controls).forEach((controlName) => {\r\n    let control = form.form.controls[controlName];\r\n    if (typeof control.value === 'string') {\r\n      control.setValue(control.value.trim());\r\n    }\r\n  });\r\n}\r\n\r\nexport function trimObject(object: Object) {\r\n  Object.keys(object).forEach((controlName) => {\r\n    let prop = object[controlName];\r\n    if (typeof prop === 'string') {\r\n      object[controlName] = prop.trim();\r\n    } else if (typeof prop === 'object' && prop !== null) {\r\n      trimObject(prop);\r\n    }\r\n  });\r\n}\r\n"]}