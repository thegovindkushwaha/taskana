{"version":3,"file":"src_app_v2_task-routing_task-routing_module_ts.c0c9ada7da7acbf2.js","mappings":"oPAOO,IAAMA,EAAb,MAAM,QACJC,YAAoBC,EAAgCC,GAAhCC,kBAAgCA,sBAEhDC,UACF,OAAOD,KAAKD,eAAeG,oBAAsB,4BAGnDC,mBAAmBC,GACjB,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,mBAAoBH,GACpC,MAAMI,GAAU,IAAIC,MAAcC,IAAI,eAAgB,uBACtD,OAAOV,KAAKF,WAAWa,IAAIX,KAAKC,IAAKI,EAAU,CAAEG,0DAXxCZ,GAAoBgB,mDAApBhB,EAAoBiB,QAApBjB,EAAoB,qBAFnB,SAEDA,GAAb,yDCDIgB,0BAA8DA,sDAA0CA,0CACxGA,0BAA6DA,SAAcA,8BAAdA,+CCG1D,IAAME,EAAb,MAAM,QAGJjB,YACUkB,EACAC,EACAC,GAFAjB,4BACAA,oBACAA,2BALVA,UAAoB,KAQpBkB,WAAQ,CAERC,cAAcC,SACZ,MAAMC,EAAQD,EAAME,SACJ,QAAXC,IAAMC,aAAKC,eAAEC,UAClB1B,KAAKI,KAAOiB,EAAMG,MAAM,GACxBxB,KAAK2B,OAAON,EAAMG,QAGpBG,OAAOC,QACmB,IAAbA,IACT5B,KAAKI,KAAOwB,EAAS,IAEvB5B,KAAKe,qBAAqBZ,mBAAmBH,KAAKI,MAAMyB,UAAU,CAChEC,KAAOC,GAAyD/B,KAAKgB,aAAagB,QAAQD,EAAIE,QAC9FC,MAAQC,IACNnC,KAAKiB,oBAAoBmB,UAAUD,EAAID,MAAMG,QAAQC,KACrDtC,KAAKuC,cAEPC,SAAU,IAAMxC,KAAKuC,eAIzBA,aACuBE,SAASC,eAAe,iBAChCC,MAAQ,GACrB3C,KAAKI,KAAO,mDAnCHU,GAAsBF,0DAAtBE,EAAsB8B,ixBDVnChC,iBAA4B,QAEtBA,uCAA2BA,QAC/BA,iBAAwBA,yCAAiBiC,aAAjBjC,CAAgC,mCAC1CkC,EAD0CC,OAC1CD,UACZlC,yBAA2HA,kBAAuKA,QAClSA,wBACAA,wBACFA,QACAA,6BAKOA,kCAAUiC,qBALjBjC,gBAH6CA,oDACAA,81BCGlCE,GAAb,6CCLA,MAAMkC,EAAiB,CACrB,CACEC,KAAM,GACNC,YAAa,CCCjB,MAAM,QACJrD,YAAoBsD,EAAmDC,GAAnDpD,4BAAmDA,cAEvEkD,YAAYpB,EAA8BuB,GACxC,OAAOrD,KAAKmD,qBAAqBG,8BAA8BC,MAC7DC,OAAKb,GACCA,GAGG3C,KAAKoD,OAAOK,SAAS,wBAE9BC,OAAW,KACFC,QAAG3D,KAAKoD,OAAOK,SAAS,uEAZ1BG,GAAgBhD,mDAAhBgD,EAAgB/C,QAAhB+C,EAAgB,qBAFf,SAEDA,GAAb,IDAIC,UAAW/C,IAQR,IAAMgD,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsBf,IACtBe,QAECD,GAAb,GEVaE,EAAb,MAAM,sDAAOA,4DAFF,CAACC,SAECD,GAAb,GCIaE,EAAb,MAAM,sDAAOA,4DAFF,CAACD,KAAcH,EAA0BE,MAEvCE,GAAb,EAAaA","names":["RoutingUploadService","constructor","httpClient","startupService","this","url","getTaskanaRestUrl","uploadRoutingRules","file","formData","FormData","append","headers","HttpHeaders","set","put","i0","factory","RoutingUploadComponent","routingUploadService","toastService","notificationService","ngOnInit","onFileChanged","event","input","target","e","files","_a","length","upload","fileList","subscribe","next","res","success","result","error","err","showError","message","key","clearInput","complete","document","getElementById","value","selectors","ctx","_r2","MAs","routes","path","canActivate","taskanaEngineService","router","state","isCustomRoutingRulesEnabled","pipe","map","parseUrl","catchError","of","TaskRoutingGuard","component","TaskRoutingRoutingModule","RouterModule","SharedModule","CommonModule","TaskRoutingModule"],"sourceRoot":"webpack:///","sources":["./src/app/v2/task-routing/services/routing-upload.service.ts","./src/app/v2/task-routing/components/routing-upload/routing-upload.component.html","./src/app/v2/task-routing/components/routing-upload/routing-upload.component.ts","./src/app/v2/task-routing/task-routing-routing.module.ts","./src/app/v2/task-routing/guards/task-routing.guard.ts","./src/app/v2/shared/shared.module.ts","./src/app/v2/task-routing/task-routing.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { StartupService } from 'app/shared/services/startup/startup.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoutingUploadService {\r\n  constructor(private httpClient: HttpClient, private startupService: StartupService) {}\r\n\r\n  get url(): string {\r\n    return this.startupService.getTaskanaRestUrl() + '/v1/routing-rules/default';\r\n  }\r\n\r\n  uploadRoutingRules(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('excelRoutingFile', file);\r\n    const headers = new HttpHeaders().set('Content-Type', 'multipart/form-data');\r\n    return this.httpClient.put(this.url, formData, { headers });\r\n  }\r\n}\r\n","<div class=\"routing-upload\">\r\n\r\n  <h1>Upload custom routing rules</h1>\r\n  <div taskanaDragAndDrop (onFileDropped)=\"upload($event)\" class=\"routing-upload__upload-area\"\r\n       (click)=\"input.click()\">\r\n    <svg class=\"routing-upload__icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path></svg>\r\n    <span class=\"routing-upload__description\" *ngIf=\"!file?.name\">Click to choose file or drag and drop here</span>\r\n    <span class=\"routing-upload__description\" *ngIf=\"file?.name\">{{file?.name}}</span>\r\n  </div>\r\n  <input #input style=\"display: none;\"\r\n         id=\"routingUpload\"\r\n         type=\"file\"\r\n         accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n         title=\"Upload task routing Excel File\"\r\n         (change)=\"onFileChanged($event)\">\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RoutingUploadService } from '@task-routing/services/routing-upload.service';\r\nimport { NotificationService } from 'app/shared/services/notifications/notification.service';\r\nimport { HotToastService } from '@ngneat/hot-toast';\r\n\r\n@Component({\r\n  selector: 'taskana-routing-upload',\r\n  templateUrl: './routing-upload.component.html',\r\n  styleUrls: ['./routing-upload.component.scss']\r\n})\r\nexport class RoutingUploadComponent implements OnInit {\r\n  file: File | null = null;\r\n\r\n  constructor(\r\n    private routingUploadService: RoutingUploadService,\r\n    private toastService: HotToastService,\r\n    private notificationService: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onFileChanged(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    if (!input.files?.length) return;\r\n    this.file = input.files[0];\r\n    this.upload(input.files);\r\n  }\r\n\r\n  upload(fileList?: FileList) {\r\n    if (typeof fileList !== 'undefined') {\r\n      this.file = fileList[0];\r\n    }\r\n    this.routingUploadService.uploadRoutingRules(this.file).subscribe({\r\n      next: (res: { amountOfImportedRow: number; result: string }) => this.toastService.success(res.result),\r\n      error: (err) => {\r\n        this.notificationService.showError(err.error.message.key);\r\n        this.clearInput();\r\n      },\r\n      complete: () => this.clearInput()\r\n    });\r\n  }\r\n\r\n  clearInput() {\r\n    const inputElement = document.getElementById('routingUpload') as HTMLInputElement;\r\n    inputElement.value = '';\r\n    this.file = null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoutingUploadComponent } from './components/routing-upload/routing-upload.component';\r\nimport { TaskRoutingGuard } from './guards/task-routing.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    canActivate: [TaskRoutingGuard],\r\n    component: RoutingUploadComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TaskRoutingRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { TaskanaEngineService } from 'app/shared/services/taskana-engine/taskana-engine.service';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskRoutingGuard implements CanActivate {\r\n  constructor(private taskanaEngineService: TaskanaEngineService, public router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> {\r\n    return this.taskanaEngineService.isCustomRoutingRulesEnabled().pipe(\r\n      map((value) => {\r\n        if (value) {\r\n          return value;\r\n        }\r\n        return this.router.parseUrl('/taskana/workplace');\r\n      }),\r\n      catchError(() => {\r\n        return of(this.router.parseUrl('/taskana/workplace'));\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule]\r\n})\r\nexport class SharedModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TaskRoutingRoutingModule } from './task-routing-routing.module';\r\nimport { RoutingUploadComponent } from './components/routing-upload/routing-upload.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [RoutingUploadComponent],\r\n  imports: [CommonModule, TaskRoutingRoutingModule, SharedModule]\r\n})\r\nexport class TaskRoutingModule {}\r\n"]}