{"version":3,"file":"default-node_modules_angular_material_fesm2015_tabs_mjs.65455bb6957a89d0.js","mappings":"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","names":["i0","e","c","d","t","_tabFocusChanged","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","factory","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","this","alignToElement","show","onStable","pipe","take","subscribe","positions","inkBar","nativeElement","style","visibility","hide","ɵfac","ANIMATION_MODULE_TYPE","ɵdir","selectors","MAT_TAB_CONTENT","MatTabContent","template","provide","useExisting","MAT_TAB_LABEL","MAT_TAB","_MatTabBase","mixinDisabled","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","super","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","templateLabel","_templateLabel","value","_setTemplateLabelInput","content","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","_explicitContent","_implicitContent","_closestTab","ɵcmp","n","TemplateRef","s","a","ngContentSelectors","encapsulation","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","MatTabBodyPortal","CdkPortalOutlet","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","_leavingSub","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","forwardRef","MatTabBody","DOCUMENT","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","EventEmitter","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","i1","inputs","elementRef","decls","directives","styles","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","MatPaginatedTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","runOutsideAngular","fromEvent","takeUntil","_stopInterval","selectedIndex","coerceNumberProperty","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","ngAfterContentInit","dirChange","of","resize","realign","updatePagination","_alignInkBarToSelectedTab","FocusKeyManager","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","merge","run","Promise","resolve","then","Math","max","min","_getMaxScrollDistance","newFocusIndex","_setTabFocus","ngAfterContentChecked","_tabLabelCount","length","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","hasModifierKey","keyCode","ENTER","SPACE","focusIndex","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","index","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","EXAGGERATED_OVERSCROLL","isEnabled","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","timer","maxScrollDistance","distance","i1$1","i3","_MatTabHeaderBase","viewportRuler","ngZone","platform","animationMode","_disableRipple","disableRipple","coerceBooleanProperty","preventDefault","MatTabHeader","E","A","O","S","H","i4","i5","nextId","_MatTabGroupMixinBase","mixinColor","mixinDisableRipple","_MatTabGroupBase","defaultConfig","_a","_tabs","QueryList","_indexToSelect","_lastFocusedTabIndex","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_dynamicHeight","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","forEach","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","selectedTab","i","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","focusTab","header","_focusChanged","MatTabChangeEvent","map","_getTabLabelId","_getTabContentId","tabHeight","height","offsetHeight","_handleClick","tabHeader","_getTabIndex","focusOrigin","MatTabGroup","st","ot","i3$1","i7","i7$1","nextUniqueId","_MatTabNavBase","color","updateActiveLink","items","active","tabPanel","_activeTabId","id","_getRole","getAttribute","MatTabNav","MatTabLink","attrs","_MatTabLinkMixinBase","mixinTabIndex","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","_handleFocus","indexOf","click","_getAriaControls","_getAriaSelected","_getAriaCurrent","MAT_RIPPLE_GLOBAL_OPTIONS","tabNavBar","focusMonitor","_tabLinkRipple","RippleRenderer","setupTriggerEvents","_removeTriggerEvents","MatTabsModule","ɵmod","ɵinj","CommonModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","A11yModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2015/tabs.mjs"],"sourcesContent":["import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, timer } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i1$1 from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            const positions = this._inkBarPositioner(element);\n            const inkBar = this._elementRef.nativeElement;\n            inkBar.style.left = positions.left;\n            inkBar.style.width = positions.width;\n        });\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_MAT_INK_BAR_POSITIONER]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TAB]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], labelClass: \"labelClass\", bodyClass: \"bodyClass\" }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TAB_GROUP]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], labelClass: [{\n                type: Input\n            }], bodyClass: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatTabBody)]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"], directives: [{ type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n        // can hold up tests that are in a background tab.\n        this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => {\n                Promise.resolve().then(() => {\n                    // Clamp the scroll distance, because it can change with the number of tabs.\n                    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n                    realign();\n                });\n            });\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _a;\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Index of the tab that was focused last. */\n        this._lastFocusedTabIndex = null;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._lastFocusedTabIndex = null;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                let selectedTab;\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        this._lastFocusedTabIndex = null;\n                        selectedTab = tabs[i];\n                        break;\n                    }\n                }\n                // If we haven't found an active tab and a tab exists at the selected index, it means\n                // that the active tab was swapped out. Since this won't be picked up by the rendering\n                // loop in `ngAfterContentChecked`, we need to sync it up manually.\n                if (!selectedTab && tabs[indexToSelect]) {\n                    Promise.resolve().then(() => {\n                        tabs[indexToSelect].isActive = true;\n                        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                    });\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        if (this._tabHeader) {\n            this._tabHeader.updatePagination();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this._lastFocusedTabIndex = index;\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, index) {\n        var _a;\n        if (tab.disabled) {\n            return null;\n        }\n        const targetIndex = (_a = this._lastFocusedTabIndex) !== null && _a !== void 0 ? _a : this.selectedIndex;\n        return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TABS_CONFIG]\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], components: [{ type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }, { type: MatTabBody, selector: \"mat-tab-body\" }], directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TABS_CONFIG]\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                if (this.tabPanel) {\n                    this.tabPanel._activeTabId = items[i].id;\n                }\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n    _getRole() {\n        return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\", tabPanel: \"tabPanel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], tabPanel: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"attr.role\": \"_getRole()\", \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        '[attr.role]': '_getRole()',\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        /** Unique id for the tab. */\n        this.id = `mat-tab-link-${nextUniqueId++}`;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n        if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n            this.elementRef.nativeElement.click();\n        }\n    }\n    _getAriaControls() {\n        var _a;\n        return this._tabNavBar.tabPanel\n            ? (_a = this._tabNavBar.tabPanel) === null || _a === void 0 ? void 0 : _a.id\n            : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n        if (this._tabNavBar.tabPanel) {\n            return this.active ? 'true' : 'false';\n        }\n        else {\n            return this.elementRef.nativeElement.getAttribute('aria-selected');\n        }\n    }\n    _getAriaCurrent() {\n        return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n        return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n        if (this._tabNavBar.tabPanel) {\n            return this._isActive ? 0 : -1;\n        }\n        else {\n            return this.tabIndex;\n        }\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabLinkBase, inputs: { active: \"active\", id: \"id\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { active: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-controls\": \"_getAriaControls()\", \"attr.aria-current\": \"_getAriaCurrent()\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.id\": \"id\", \"attr.tabIndex\": \"_getTabIndex()\", \"attr.role\": \"_getRole()\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-controls]': '_getAriaControls()',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.id]': 'id',\n                        '[attr.tabIndex]': '_getTabIndex()',\n                        '[attr.role]': '_getRole()',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n    constructor() {\n        /** Unique id for the tab panel. */\n        this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n}\nMatTabNavPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatTabNavPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNavPanel, selector: \"mat-tab-nav-panel\", inputs: { id: \"id\" }, host: { attributes: { \"role\": \"tabpanel\" }, properties: { \"attr.aria-labelledby\": \"_activeTabId\", \"attr.id\": \"id\" }, classAttribute: \"mat-tab-nav-panel\" }, exportAs: [\"matTabNavPanel\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-tab-nav-panel',\n                    exportAs: 'matTabNavPanel',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        '[attr.aria-labelledby]': '_activeTabId',\n                        '[attr.id]': 'id',\n                        'class': 'mat-tab-nav-panel',\n                        'role': 'tabpanel',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n"]}